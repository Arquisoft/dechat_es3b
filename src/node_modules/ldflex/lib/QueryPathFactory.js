"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _QueryPath = _interopRequireDefault(require("./QueryPath.js"));

var _PathExpressionHandler = _interopRequireDefault(require("./PathExpressionHandler.js"));

var _ExecuteQueryHandler = _interopRequireDefault(require("./ExecuteQueryHandler.js"));

var _SparqlHandler = _interopRequireDefault(require("./SparqlHandler.js"));

var _JSONLDResolver = _interopRequireDefault(require("./JSONLDResolver.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const DEFAULT_HANDLERS = {
  pathExpression: new _PathExpressionHandler.default(),
  sparql: new _SparqlHandler.default(),
  then: new _ExecuteQueryHandler.default({
    single: true
  }),
  [Symbol.asyncIterator]: new _ExecuteQueryHandler.default()
};
/**
 * A QueryPathFactory creates QueryPath instances with default settings.
 */

class QueryPathFactory {
  constructor(settings, data) {
    // Complete settings object
    settings = Object.assign(Object.create(null), settings);
    if (!settings.handlers) settings.handlers = DEFAULT_HANDLERS;
    if (!settings.resolvers) settings.resolvers = [];
    if (settings.context) settings.resolvers.push(new _JSONLDResolver.default(settings.context));
    this._settings = settings;
    this._data = data;
  }
  /**
   * Creates a QueryPath with the given (optional) settings and data.
   */


  create(settings = {}, data) {
    // The settings parameter is optional
    if (!data) [data, settings] = [settings, null]; // Apply defaults on settings and data

    return new _QueryPath.default(Object.assign(Object.create(null), this._settings, settings), Object.assign(Object.create(null), this._data, data));
  }

}

exports.default = QueryPathFactory;